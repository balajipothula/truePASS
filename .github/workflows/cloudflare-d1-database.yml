name: "🛢 Cloudflare • D1 • Database"
description: "Creating Cloudflare D1 Database resource using Wrangler Action v3.14.1"

# This workflow requires the following secrets to be configured in GitHub:

# CLOUDFLARE_API_TOKEN:
#  A scoped API token with permissions to manage D1 Database, Workers, or other Cloudflare services.
#  Typically includes permissions like:
#  * Account - D1:Edit
#  Used for authenticating API requests via cURL or the Wrangler CLI.

# CLOUDFLARE_ACCOUNT_ID:
#  Your unique Cloudflare account identifier.
#  Required to construct API endpoints like:
#    https://api.cloudflare.com/client/v4/accounts/${CLOUDFLARE_ACCOUNT_ID}/d1/...

on:
  workflow_dispatch:
    inputs:
      database-name:
        type: string
        default: null
        description: "Cloudflare D1 Database Name"
        required: true
      location:
        type: choice
        default: "apac"
        options: [apac, eeur, enam, oc, wnam, weur]
        description: "Cloudflare D1 Database Location"
        required: false
      create-d1-database:
        type: boolean
        default: false
        description: "Create Cloudflare D1 Database"
        required: false
      info-d1-database:
        type: boolean
        default: false
        description: "Info Cloudflare D1 Database"
        required: false
      list-d1-databases:
        type: boolean
        default: false
        description: "List Cloudflare D1 Databases"
        required: false
      delete-d1-database:
        type: boolean
        default: false
        description: "Delete Cloudflare D1 Database"
        required: false
      sql-file-name:
        type: string
        default: "create_table.sql"
        description: "SQL file to execute on D1 Database"
        required: false
      execute-d1-database:
        type: boolean
        default: false
        description: "Execute SQL on Cloudflare D1 Database"
        required: false

jobs:
  cf_d1_database:
    name: 🛢 Cloudflare D1 Database
    runs-on: ubuntu-22.04
    environment: ${{ github.ref }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Step - Checkout ᵛ⁵
        uses: actions/checkout@v5
      - name: Create Cloudflare D1 Database
        if: ${{ inputs.create-d1-database && inputs.database-name }}
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: "4.33.1"
          command: d1 create ${{ inputs.database-name }} --location ${{ inputs.location }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Info Cloudflare D1 Database
        if: ${{ inputs.info-d1-database && inputs.database-name }}
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: "4.33.1"
          command: d1 info ${{ inputs.database-name }} --json false
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: List Cloudflare D1 Databases
        if: ${{ inputs.list-d1-databases }}
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: "4.33.1"
          command: d1 list --json false
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Delete Cloudflare D1 Database
        if: ${{ inputs.delete-d1-database && inputs.database-name }}
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          wranglerVersion: "4.33.1"
          command: d1 delete ${{ inputs.database-name }} --skip-confirmation
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare D1 Database Execute Command
        if: ${{ inputs.database-name && inputs.sql-file-name }}
        id: d1_database
        env:
          DATABASE_NAME: ${{ inputs.database-name }}
          SQL_FILE_NAME: ${{ inputs.sql-file-name }}
          SQL_FILE_PATH: cloudflare/resources/d1/database/${{ inputs.sql-file-name }}
        run: |
          echo "execute_sql=d1 execute $DATABASE_NAME --file $SQL_FILE_PATH --remote true" >> $GITHUB_OUTPUT
      - name: Execute SQL on D1 Database
        if: ${{ inputs.execute-d1-database && inputs.database-name && inputs.sql-file-name }}
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: "."
          wranglerVersion: "4.33.1"
          command: ${{ steps.d1_database.outputs.execute_sql }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
